source("http://bioconductor.org/biocLite.R") biocLite("rhdf5")
install.packages("rhdf5")
install.packages("ggplot2")
install.packages("dplyr")
library("dplyr", lib.loc="~/R/win-library/3.0")
install.packages("dplyr")
install.packages("scales")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
detach("package:BiocInstaller", unload=TRUE)
library("BiocInstaller", lib.loc="~/R/win-library/3.0")
library("assertthat", lib.loc="~/R/win-library/3.0")
library("BH", lib.loc="~/R/win-library/3.0")
library("boot", lib.loc="~/R/win-library/3.0")
library("class", lib.loc="~/R/win-library/3.0")
library("cluster", lib.loc="~/R/win-library/3.0")
library("codetools", lib.loc="~/R/win-library/3.0")
library("colorspace", lib.loc="~/R/win-library/3.0")
library("dichromat", lib.loc="~/R/win-library/3.0")
library("digest", lib.loc="~/R/win-library/3.0")
library("dplyr", lib.loc="~/R/win-library/3.0")
detach("package:dplyr", unload=TRUE)
detach("package:digest", unload=TRUE)
detach("package:dichromat", unload=TRUE)
detach("package:colorspace", unload=TRUE)
detach("package:codetools", unload=TRUE)
detach("package:cluster", unload=TRUE)
detach("package:class", unload=TRUE)
detach("package:boot", unload=TRUE)
detach("package:BiocInstaller", unload=TRUE)
detach("package:BH", unload=TRUE)
detach("package:assertthat", unload=TRUE)
library("foreign", lib.loc="~/R/win-library/3.0")
library("ggplot2", lib.loc="~/R/win-library/3.0")
library("gtable", lib.loc="~/R/win-library/3.0")
library("hflights", lib.loc="~/R/win-library/3.0")
library("KernSmooth", lib.loc="~/R/win-library/3.0")
library("labeling", lib.loc="~/R/win-library/3.0")
library("Lahman", lib.loc="~/R/win-library/3.0")
library("lattice", lib.loc="~/R/win-library/3.0")
library("magrittr", lib.loc="~/R/win-library/3.0")
library("manipulate", lib.loc="~/R/win-library/3.0")
library("MASS", lib.loc="~/R/win-library/3.0")
library("Matrix", lib.loc="~/R/win-library/3.0")
library("mgcv", lib.loc="~/R/win-library/3.0")
library("munsell", lib.loc="~/R/win-library/3.0")
detach("package:nlme", unload=TRUE)
library("nnet", lib.loc="~/R/win-library/3.0")
library("nlme", lib.loc="~/R/win-library/3.0")
library("plyr", lib.loc="~/R/win-library/3.0")
library("proto", lib.loc="~/R/win-library/3.0")
library("RColorBrewer", lib.loc="~/R/win-library/3.0")
library("Rcpp", lib.loc="~/R/win-library/3.0")
library("reshape2", lib.loc="~/R/win-library/3.0")
library("rpart", lib.loc="~/R/win-library/3.0")
library("rstudio", lib.loc="~/R/win-library/3.0")
library("scales", lib.loc="~/R/win-library/3.0")
library("spatial", lib.loc="~/R/win-library/3.0")
library("stringr", lib.loc="~/R/win-library/3.0")
library("survival", lib.loc="~/R/win-library/3.0")
library("TTR", lib.loc="~/R/win-library/3.0")
detach("package:xts", unload=TRUE)
library("xts", lib.loc="~/R/win-library/3.0")
detach("package:zoo", unload=TRUE)
detach("package:xts", unload=TRUE)
detach("package:TTR", unload=TRUE)
detach("package:survival", unload=TRUE)
detach("package:stringr", unload=TRUE)
detach("package:spatial", unload=TRUE)
detach("package:scales", unload=TRUE)
detach("package:rstudio", unload=TRUE)
detach("package:rpart", unload=TRUE)
detach("package:reshape2", unload=TRUE)
detach("package:Rcpp", unload=TRUE)
detach("package:RColorBrewer", unload=TRUE)
detach("package:proto", unload=TRUE)
detach("package:plyr", unload=TRUE)
detach("package:nnet", unload=TRUE)
detach("package:nlme", unload=TRUE)
detach("package:munsell", unload=TRUE)
detach("package:mgcv", unload=TRUE)
detach("package:Matrix", unload=TRUE)
detach("package:MASS", unload=TRUE)
detach("package:manipulate", unload=TRUE)
detach("package:magrittr", unload=TRUE)
detach("package:lattice", unload=TRUE)
detach("package:Lahman", unload=TRUE)
detach("package:labeling", unload=TRUE)
detach("package:KernSmooth", unload=TRUE)
detach("package:hflights", unload=TRUE)
detach("package:gtable", unload=TRUE)
detach("package:ggplot2", unload=TRUE)
detach("package:foreign", unload=TRUE)
rhdf5: source("http://bioconductor.org/biocLite.R") biocLite("rhdf5")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library("boot", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("class", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("cluster", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("codetools", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("compiler", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("datasets", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("foreign", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("graphics", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("grDevices", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("grid", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("lattice", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("MASS", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("Matrix", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("methods", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("mgcv", lib.loc="C:/Program Files/R/R-3.2.0/library")
detach("package:nlme", unload=TRUE)
library("nlme", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("nnet", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("parallel", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("rpart", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("spatial", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("splines", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("stats", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("stats4", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("survival", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("tcltk", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("tools", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("utils", lib.loc="C:/Program Files/R/R-3.2.0/library")
detach("package:boot", unload=TRUE)
detach("package:class", unload=TRUE)
detach("package:cluster", unload=TRUE)
detach("package:codetools", unload=TRUE)
detach("package:compiler", unload=TRUE)
detach("package:datasets", unload=TRUE)
detach("package:foreign", unload=TRUE)
detach("package:graphics", unload=TRUE)
detach("package:grDevices", unload=TRUE)
detach("package:grid", unload=TRUE)
detach("package:KernSmooth", unload=TRUE)
detach("package:lattice", unload=TRUE)
detach("package:MASS", unload=TRUE)
detach("package:Matrix", unload=TRUE)
detach("package:methods", unload=TRUE)
detach("package:mgcv", unload=TRUE)
detach("package:nlme", unload=TRUE)
detach("package:nnet", unload=TRUE)
detach("package:parallel", unload=TRUE)
detach("package:rpart", unload=TRUE)
detach("package:spatial", unload=TRUE)
detach("package:splines", unload=TRUE)
detach("package:stats", unload=TRUE)
detach("package:stats4", unload=TRUE)
detach("package:survival", unload=TRUE)
detach("package:tcltk", unload=TRUE)
detach("package:tools", unload=TRUE)
detach("package:utils", unload=TRUE)
library("assertthat", lib.loc="~/R/win-library/3.2")
library("BiocInstaller", lib.loc="~/R/win-library/3.2")
library("boot", lib.loc="~/R/win-library/3.2")
library("class", lib.loc="~/R/win-library/3.2")
detach("package:BiocInstaller", unload=TRUE)
library("BiocInstaller", lib.loc="~/R/win-library/3.2")
detach("package:assertthat", unload=TRUE)
detach("package:boot", unload=TRUE)
detach("package:class", unload=TRUE)
install.packages("manipulate")
library("BiocInstaller", lib.loc="~/R/win-library/3.2")
install.packages("manipulate")
library("assertthat", lib.loc="~/R/win-library/3.2")
library("BiocInstaller", lib.loc="~/R/win-library/3.2")
library("boot", lib.loc="~/R/win-library/3.2")
library("class", lib.loc="~/R/win-library/3.2")
library("cluster", lib.loc="~/R/win-library/3.2")
library("codetools", lib.loc="~/R/win-library/3.2")
library("colorspace", lib.loc="~/R/win-library/3.2")
library("DBI", lib.loc="~/R/win-library/3.2")
library("dichromat", lib.loc="~/R/win-library/3.2")
library("digest", lib.loc="~/R/win-library/3.2")
library("dplyr", lib.loc="~/R/win-library/3.2")
library("foreign", lib.loc="~/R/win-library/3.2")
library("ggplot2", lib.loc="~/R/win-library/3.2")
library("gtable", lib.loc="~/R/win-library/3.2")
library("hflights", lib.loc="~/R/win-library/3.2")
library("installr", lib.loc="~/R/win-library/3.2")
library("KernSmooth", lib.loc="~/R/win-library/3.2")
library("labeling", lib.loc="~/R/win-library/3.2")
library("Lahman", lib.loc="~/R/win-library/3.2")
library("lattice", lib.loc="~/R/win-library/3.2")
library("lazyeval", lib.loc="~/R/win-library/3.2")
library("magrittr", lib.loc="~/R/win-library/3.2")
library("manipulate", lib.loc="~/R/win-library/3.2")
library("MASS", lib.loc="~/R/win-library/3.2")
library("Matrix", lib.loc="~/R/win-library/3.2")
library("mgcv", lib.loc="~/R/win-library/3.2")
library("munsell", lib.loc="~/R/win-library/3.2")
library("nnet", lib.loc="~/R/win-library/3.2")
library("plyr", lib.loc="~/R/win-library/3.2")
library("proto", lib.loc="~/R/win-library/3.2")
library("R6", lib.loc="~/R/win-library/3.2")
library("RColorBrewer", lib.loc="~/R/win-library/3.2")
library("Rcpp", lib.loc="~/R/win-library/3.2")
library("reshape2", lib.loc="~/R/win-library/3.2")
library("rhdf5", lib.loc="~/R/win-library/3.2")
library("rpart", lib.loc="~/R/win-library/3.2")
library("rstudio", lib.loc="~/R/win-library/3.2")
library("scales", lib.loc="~/R/win-library/3.2")
library("spatial", lib.loc="~/R/win-library/3.2")
library("stringi", lib.loc="~/R/win-library/3.2")
library("stringr", lib.loc="~/R/win-library/3.2")
library("survival", lib.loc="~/R/win-library/3.2")
library("TTR", lib.loc="~/R/win-library/3.2")
detach("package:xts", unload=TRUE)
library("xts", lib.loc="~/R/win-library/3.2")
library("zlibbioc", lib.loc="~/R/win-library/3.2")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
source("http://bioconductor.org/biocLite.R")
?BiocUpgrade
biocLite("BiocUpgrade")
detach("package:BiocInstaller", unload=TRUE)
library("BiocInstaller", lib.loc="~/R/win-library/3.2")
detach("package:BiocInstaller", unload=TRUE)
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library("rhdf5", lib.loc="~/R/win-library/3.2")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
install.packages("swirl")
library(swirl)
swirl()
install_from_swirl("R Programming")
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x <- 1
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
f
z
d
L
g
pollutantmean <- function(directory, pollutant, id = 1:332)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
myfolder <- setwd("directory")
x <- read.csv("id")
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
myfolder <- setwd("directory")
x <- read.csv("id")
x
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
}
pollutantmean
?paste
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
####Start of my function####
##set working directory
#directory <- "specdata"
setwd("C:/Users/eayres/Documents/Coursera_R-class/Quizses+Assignments/Programming Assignments/Programming1/")
x <- paste(getwd(), directory, sep="/")
setwd(x)
##Loop through all the data files
#id <- 70:72
datasum <- c()
datalength <- c()
for(i in id){
### change "id" to file name (i.e., 3-digit number & .csv)
sprintf("%03d.csv", i)
file <- sprintf("%03d.csv", i)
### Read in the file(s)
csvdata <- read.csv(paste0(file), header=TRUE, sep=",")
head(csvdata)
##identify pollutant column and data
#pollutant <- "nitrate"
if (pollutant == "nitrate"){
z <- csvdata$nitrate
} else {
z <- csvdata$sulfate
}
##Remove NAs
zz <- z[!is.na(z)]
#Calculate mean, sum, and number values
a <- mean(zz)
b <- sum(zz)
c <- length(zz)
##Printing sum and count of pollutant to files
datasum<-append(datasum,c(b))
datalength<-append(datalength,c(c))
}
##Calculating average pollutant
sum(datasum)/sum(datalength)
}
pollutantmean("specdata", "sulfate", 1:10)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
sourcs("C:/Users/eayres/Documents/Coursera_R-class/Quizses+Assignments/Programming Assignments/Programming1/pollutantmean.R/")
source("C:/Users/eayres/Documents/Coursera_R-class/Quizses+Assignments/Programming Assignments/Programming1/pollutantmean.R/")
source("C:/Users/eayres/Documents/Coursera_R-class/Quizses+Assignments/Programming Assignments/Programming1/pollutantmean.R")
submit()
source("C:/Users/eayres/Documents/Coursera_R-class/Quizses+Assignments/Programming Assignments/Programming1/pollutantmean.R")
?sourcs
?source
source(pollutionmean)
source(pollutionmean())
source(pollutantmean())
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
####Start of my function####
##set working directory
#directory <- "specdata"
setwd("C:/Users/eayres/Documents/Coursera_R-class/Quizses+Assignments/Programming Assignments/Programming1/")
x <- paste(C:/Users/eayres/Documents/Coursera_R-class/Quizses+Assignments/Programming Assignments/Programming1/, directory, sep="/")
setwd(x)
##Loop through all the data files
#id <- 70:72
datasum <- c()
datalength <- c()
for(i in id){
### change "id" to file name (i.e., 3-digit number & .csv)
sprintf("%03d.csv", i)
file <- sprintf("%03d.csv", i)
### Read in the file(s)
csvdata <- read.csv(paste0(file), header=TRUE, sep=",")
head(csvdata)
##identify pollutant column and data
#pollutant <- "nitrate"
if (pollutant == "nitrate"){
z <- csvdata$nitrate
} else {
z <- csvdata$sulfate
}
##Remove NAs
zz <- z[!is.na(z)]
#Calculate mean, sum, and number values
a <- mean(zz)
b <- sum(zz)
c <- length(zz)
##Printing sum and count of pollutant to files
datasum<-append(datasum,c(b))
datalength<-append(datalength,c(c))
}
##Calculating average pollutant
sum(datasum)/sum(datalength)
}
